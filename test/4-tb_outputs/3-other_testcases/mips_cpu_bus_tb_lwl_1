RAM : INIT : Loading RAM contents from ./test/2-bin/3-other_testcases/lwl_1.hex.txt
RAM : INIT : RAM contents at 00004e20 are: 24
RAM : INIT : RAM contents at 00004e21 are: 42
RAM : INIT : RAM contents at 00004e22 are: 00
RAM : INIT : RAM contents at 00004e23 are: 00
RAM : INIT : RAM contents at 00004e24 are: ac
RAM : INIT : RAM contents at 00004e25 are: 04
RAM : INIT : RAM contents at 00004e26 are: 00
RAM : INIT : RAM contents at 00004e27 are: 14
RAM : INIT : RAM contents at 00004e28 are: 24
RAM : INIT : RAM contents at 00004e29 are: 84
RAM : INIT : RAM contents at 00004e2a are: ab
RAM : INIT : RAM contents at 00004e2b are: 12
RAM : INIT : RAM contents at 00004e2c are: 3c
RAM : INIT : RAM contents at 00004e2d are: 04
RAM : INIT : RAM contents at 00004e2e are: 00
RAM : INIT : RAM contents at 00004e2f are: 00
RAM : INIT : RAM contents at 00004e30 are: 88
RAM : INIT : RAM contents at 00004e31 are: 02
RAM : INIT : RAM contents at 00004e32 are: 00
RAM : INIT : RAM contents at 00004e33 are: 17
RAM : INIT : RAM contents at 00004e34 are: 00
RAM : INIT : RAM contents at 00004e35 are: 00
RAM : INIT : RAM contents at 00004e36 are: 00
RAM : INIT : RAM contents at 00004e37 are: 08
RAM : INIT : RAM contents at 00004e38 are: 00
RAM : INIT : RAM contents at 00004e39 are: 00
RAM : INIT : RAM contents at 00004e3a are: 00
RAM : INIT : RAM contents at 00004e3b are: 00
RAM : INIT : RAM contents at 00004e3c are: 00
RAM : INIT : RAM contents at 00004e3d are: 00
PC: not reset or halt
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
FSM: EXEC1
TB : Reset is now low.
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CPU : INFO   : Resetting.
PC: not reset or halt
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: bfc00000
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 00004224
CTRL : instruction word: 24420000, opcode: 001001, funccode: 000000
IIIIIIIIII type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:24420000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
ALU: ALU input A:         x
ALU: ALU input B:         x
ALU: ALU opcode: 0
ALU: ALU r:         x
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00100100010000100000000000000000, FUNCCODE: 000000
CTRL: Here is the RsDATA in andi =          0
CTRL: Here is the result =          x
FSM: FETCH
PC: not reset or halt
PC: current value before increment: bfc00000
PC: normal increment
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: bfc00000
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 00004224
CTRL : instruction word: 24420000, opcode: 001001, funccode: 000000
IIIIIIIIII type
DECODE: Decoding is done, enterring parameter assginment
CTRL: INFO: ADDIU called
CTRL: INPUT INFO: Rs = 02 Rt = 02 Immediate = 0000 ALUCODE = 09 Rd = 02
ALU: ALU input A:         0
ALU: ALU input B:         X
ALU: ALU opcode: 9
ALU: ALU r:         x
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00100100010000100000000000000000, FUNCCODE: 000000
CTRL: Here is the RsDATA in andi =          x
CTRL: Here is the result =          x
PC: not reset or halt
PC: current value before increment: bfc00004
PC: normal increment
FSM: FETCH
CTRL: Here is the result =          x
CTRL: Read instruction at RAM address: bfc00004
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 140004ac
CTRL : instruction word: ac040014, opcode: 101011, funccode: 010100
IIIIIIIIII type
DECODE: Decoding is done, enterring parameter assginment
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 10101100000001000000000000010100, FUNCCODE: 010100
CTRL: Here is the result =          0
FSM: FETCH
PC: not reset or halt
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: bfc00008
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 12ab8424
CTRL : instruction word: 2484ab12, opcode: 001001, funccode: 010010
IIIIIIIIII type
DECODE: Decoding is done, enterring parameter assginment
CTRL: INFO: ADDIU called
CTRL: INPUT INFO: Rs = 04 Rt = 04 Immediate = ab12 ALUCODE = 09 Rd = 04
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00100100100001001010101100010010, FUNCCODE: 010010
CTRL: Here is the RsDATA in andi =          x
CTRL: Here is the result =          0
ALU: ALU input A:         x
ALU: ALU input B:     43794
ALU: ALU opcode: 9
ALU: ALU r:         x
PC: not reset or halt
PC: current value before increment: bfc00008
PC: normal increment
FSM: FETCH
CTRL: Here is the result =          x
CTRL: Read instruction at RAM address: bfc00008
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 12ab8424
CTRL : instruction word: 2484ab12, opcode: 001001, funccode: 010010
IIIIIIIIII type
DECODE: Decoding is done, enterring parameter assginment
CTRL: INFO: ADDIU called
CTRL: INPUT INFO: Rs = 04 Rt = 04 Immediate = ab12 ALUCODE = 09 Rd = 04
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00100100100001001010101100010010, FUNCCODE: 010010
CTRL: Here is the RsDATA in andi =          0
CTRL: Here is the result =          x
FSM: FETCH
PC: not reset or halt
PC: current value before increment: bfc0000c
PC: normal increment
CTRL: Here is the result =      43794
CTRL: Read instruction at RAM address: bfc0000c
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 0000043c
CTRL : instruction word: 3c040000, opcode: 001111, funccode: 000000
IIIIIIIIII type
DECODE: Decoding is done, enterring parameter assginment
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00111100000001000000000000000000, FUNCCODE: 000000
CTRL: Here is the result =          0
PC: not reset or halt
PC: current value before increment: bfc00010
PC: normal increment
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: bfc00010
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 17000288
CTRL : instruction word: 88020017, opcode: 100010, funccode: 010111
IIIIIIIIII type
DECODE: Decoding is done, enterring parameter assginment
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 10001000000000100000000000010111, FUNCCODE: 010111
CTRL: Here is the result =          0
FSM: FETCH
PC: not reset or halt
PC: current value before increment: bfc00014
PC: normal increment
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: bfc00014
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 08000000
CTRL : instruction word: 00000008, opcode: 000000, funccode: 001000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00000000000000000000000000001000, FUNCCODE: 001000
Arrived at jr: xxxxxxxx, Rs:  0
CTRL: Here is the result =          0
PC: not reset or halt
PC: current value before increment: bfc00018
PC: In jump_r
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: bfc00018
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
FSM: FETCH
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
FSM: FETCH
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
FSM: FETCH
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
FSM: FETCH
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
FSM: FETCH
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
FSM: FETCH
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
FSM: FETCH
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
FSM: FETCH
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
FSM: FETCH
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
FSM: FETCH
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
FSM: FETCH
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
FSM: FETCH
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
FATAL: test/0-MIPS_tb_RAM/mips_cpu_bus_tb.v:68: Simulation did not finish within         100 cycles.
       Time: 100000  Scope: mips_cpu_bus_tb
