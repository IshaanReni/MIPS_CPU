RAM : INIT : Loading RAM contents from ./test/2-bin/0-fundamental_testing/lw_1.hex.txt
RAM : INIT : RAM contents at 00004e20 are: 24
RAM : INIT : RAM contents at 00004e21 are: 63
RAM : INIT : RAM contents at 00004e22 are: 94
RAM : INIT : RAM contents at 00004e23 are: 04
RAM : INIT : RAM contents at 00004e24 are: 00
RAM : INIT : RAM contents at 00004e25 are: 00
RAM : INIT : RAM contents at 00004e26 are: 00
RAM : INIT : RAM contents at 00004e27 are: 00
RAM : INIT : RAM contents at 00004e28 are: ac
RAM : INIT : RAM contents at 00004e29 are: 83
RAM : INIT : RAM contents at 00004e2a are: 01
RAM : INIT : RAM contents at 00004e2b are: 00
RAM : INIT : RAM contents at 00004e2c are: 8c
RAM : INIT : RAM contents at 00004e2d are: 82
RAM : INIT : RAM contents at 00004e2e are: 01
RAM : INIT : RAM contents at 00004e2f are: 00
RAM : INIT : RAM contents at 00004e30 are: 00
RAM : INIT : RAM contents at 00004e31 are: 00
RAM : INIT : RAM contents at 00004e32 are: 00
RAM : INIT : RAM contents at 00004e33 are: 08
RAM : INIT : RAM contents at 00004e34 are: 00
RAM : INIT : RAM contents at 00004e35 are: 00
RAM : INIT : RAM contents at 00004e36 are: 00
RAM : INIT : RAM contents at 00004e37 are: 00
RAM : INIT : RAM contents at 00004e38 are: 00
RAM : INIT : RAM contents at 00004e39 are: 00
RAM : INIT : RAM contents at 00004e3a are: 00
RAM : INIT : RAM contents at 00004e3b are: 00
RAM : INIT : RAM contents at 00004e3c are: 00
RAM : INIT : RAM contents at 00004e3d are: 00
REG File: 2 and 3 xxxxxxxx, xxxxxxxx
PC: not reset or halt
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
REG File: 2 and 3 xxxxxxxx, xxxxxxxx
REG File: 2 and 3 00000000, 00000000
FSM: EXEC1
TB : Reset is now low.
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CPU : INFO   : Resetting.
REG File: 2 and 3 00000000, 00000000
PC: not reset or halt
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: bfc00000
REG File: 2 and 3 00000000, 00000000
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 04946324
CTRL : instruction word: 24639404, opcode: 001001, funccode: 000100
IIIIIIIIII type
DECODE: Decoding is done, enterring parameter assginment
ALU: ALU input A:         x
ALU: ALU input B:         x
ALU: ALU opcode: 4
ALU: ALU r:         x
REG File: 2 and 3 00000000, 00000000
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00100100011000111001010000000100, FUNCCODE: 000100
CTRL: Here is the RsDATA in andi =          0
CTRL: Here is the result =          x
REG File: 2 and 3 00000000, 00000000
FSM: FETCH
PC: not reset or halt
PC: current value before increment: bfc00000
PC: normal increment
CTRL: Here is the result =          x
CTRL: Read instruction at RAM address: bfc00000
REG File: 2 and 3 00000000, 00000000
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 04946324
CTRL : instruction word: 24639404, opcode: 001001, funccode: 000100
IIIIIIIIII type
DECODE: Decoding is done, enterring parameter assginment
CTRL: INFO: ADDIU called
CTRL: INPUT INFO: Rs = 03 Rt = 03 Immediate = 9404 ALUCODE = 09 Rd = 03
REG File: 2 and 3 00000000, 00000000
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00100100011000111001010000000100, FUNCCODE: 000100
CTRL: Here is the RsDATA in andi =          0
CTRL: Here is the result =          x
REG File: 2 and 3 00000000, 00000000
PC: not reset or halt
PC: current value before increment: bfc00004
PC: normal increment
FSM: FETCH
CTRL: Here is the result =      37892
CTRL: Read instruction at RAM address: bfc00004
REG File: 2 and 3 00000000, xxxxxxxx
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
REG File: 2 and 3 00000000, xxxxxxxx
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =      37892
ALU: ALU input A:         x
ALU: ALU input B:         0
ALU: ALU opcode: 9
ALU: ALU r:         x
REG File: 2 and 3 00000000, xxxxxxxx
FSM: FETCH
PC: not reset or halt
PC: current value before increment: bfc00008
PC: normal increment
CTRL: Here is the result =          x
CTRL: Read instruction at RAM address: bfc00008
REG File: 2 and 3 00000000, 00009404
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 000183ac
CTRL : instruction word: ac830100, opcode: 101011, funccode: 000000
IIIIIIIIII type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 04, Instruction:ac830100, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 3 00000000, 00009404
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 10101100100000110000000100000000, FUNCCODE: 000000
CTRL: Here is the result =          X
REG File: 2 and 3 00000000, 00009404
PC: not reset or halt
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: bfc0000c
REG File: 2 and 3 00000000, 00009404
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 0001828c
CTRL : instruction word: 8c820100, opcode: 100011, funccode: 000000
IIIIIIIIII type
DECODE: Decoding is done, enterring parameter assginment
REG File: 2 and 3 00000000, 00009404
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 10001100100000100000000100000000, FUNCCODE: 000000
CTRL: Here is the result =          0
REG File: 2 and 3 00000000, 00009404
FSM: FETCH
PC: not reset or halt
PC: current value before increment: bfc0000c
PC: normal increment
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: bfc0000c
REG File: 2 and 3 00000000, 00009404
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 0001828c
CTRL : instruction word: 8c820100, opcode: 100011, funccode: 000000
IIIIIIIIII type
DECODE: Decoding is done, enterring parameter assginment
REG File: 2 and 3 00000000, 00009404
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 10001100100000100000000100000000, FUNCCODE: 000000
CTRL: Here is the result =          0
REG File: 2 and 3 00000000, 00009404
PC: not reset or halt
PC: current value before increment: bfc00010
PC: normal increment
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: bfc00010
REG File: 2 and 3 00000000, 00009404
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 08000000
CTRL : instruction word: 00000008, opcode: 000000, funccode: 001000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
REG File: 2 and 3 00000000, 00009404
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00000000000000000000000000001000, FUNCCODE: 001000
Arrived at jr: 00000000, Rs:  0
CTRL: Here is the result =          0
REG File: 2 and 3 00000000, 00009404
FSM: FETCH
PC: not reset or halt
PC: current value before increment: bfc00014
PC: In jump_r
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: bfc00014
REG File: 2 and 3 00000000, 00009404
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 3 00000000, 00009404
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
REG File: 2 and 3 00000000, 00009404
PC: not reset or halt
PC: current value before increment: 00000000
PC: normal increment
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: 00000000
REG File: 2 and 3 00000000, 00009404
FSM: EXEC1
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 3 00000000, 00009404
FSM: EXEC2
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
REG File: 2 and 3 00000000, 00009404
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: 00000000
REG File: 2 and 3 00000000, 00009404
FSM: HALT
REG File: 2 and 3 00000000, 00009404
FSM: HALT
TB : finished; running=0
TB : INFO : register_v0=00000000
test/0-MIPS_tb_RAM/mips_cpu_bus_tb.v:97: $finish called at 31500 (10ps)
          0
