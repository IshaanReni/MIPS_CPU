RAM : INIT : Loading RAM contents from ./test/2-bin/0-fundamental_testing/dum_dum.hex.txt
RAM : INIT : RAM contents at 00004e20 are: 24
RAM : INIT : RAM contents at 00004e21 are: 04
RAM : INIT : RAM contents at 00004e22 are: 54
RAM : INIT : RAM contents at 00004e23 are: 32
RAM : INIT : RAM contents at 00004e24 are: 24
RAM : INIT : RAM contents at 00004e25 are: 82
RAM : INIT : RAM contents at 00004e26 are: 55
RAM : INIT : RAM contents at 00004e27 are: 55
RAM : INIT : RAM contents at 00004e28 are: 00
RAM : INIT : RAM contents at 00004e29 are: 00
RAM : INIT : RAM contents at 00004e2a are: 00
RAM : INIT : RAM contents at 00004e2b are: 08
RAM : INIT : RAM contents at 00004e2c are: 24
RAM : INIT : RAM contents at 00004e2d are: a5
RAM : INIT : RAM contents at 00004e2e are: 00
RAM : INIT : RAM contents at 00004e2f are: 45
RAM : INIT : RAM contents at 00004e30 are: 00
RAM : INIT : RAM contents at 00004e31 are: 00
RAM : INIT : RAM contents at 00004e32 are: 00
RAM : INIT : RAM contents at 00004e33 are: 00
RAM : INIT : RAM contents at 00004e34 are: 00
RAM : INIT : RAM contents at 00004e35 are: 00
RAM : INIT : RAM contents at 00004e36 are: 00
RAM : INIT : RAM contents at 00004e37 are: 00
RAM : INIT : RAM contents at 00004e38 are: 00
RAM : INIT : RAM contents at 00004e39 are: 00
RAM : INIT : RAM contents at 00004e3a are: 00
RAM : INIT : RAM contents at 00004e3b are: 00
RAM : INIT : RAM contents at 00004e3c are: 00
RAM : INIT : RAM contents at 00004e3d are: 00
REG File: 2 and 4 xxxxxxxx, xxxxxxxx
PC: not reset or halt
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
REG File: 2 and 4 xxxxxxxx, xxxxxxxx
REG File: 2 and 4 00000000, 00000000
FSM: EXEC1
TB : Reset is now low.
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CPU : INFO   : Resetting.
REG File: 2 and 4 00000000, 00000000
PC: not reset or halt
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: bfc00000
REG File: 2 and 4 00000000, 00000000
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 32540424
CTRL : instruction word: 24045432, opcode: 001001, funccode: 110010
IIIIIIIIII type
DECODE: Decoding is done, enterring parameter assginment
REG File: 2 and 4 00000000, 00000000
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00100100000001000101010000110010, FUNCCODE: 110010
CTRL: Here is the RsDATA in andi =          0
CTRL: Here is the result =          0
REG File: 2 and 4 00000000, 00000000
FSM: FETCH
PC: not reset or halt
PC: current value before increment: bfc00000
PC: normal increment
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: bfc00000
REG File: 2 and 4 00000000, 00000000
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 32540424
CTRL : instruction word: 24045432, opcode: 001001, funccode: 110010
IIIIIIIIII type
DECODE: Decoding is done, enterring parameter assginment
CTRL: INFO: ADDIU called
CTRL: INPUT INFO: Rs = 00 Rt = 04 Immediate = 5432 ALUCODE = 09 Rd = 00
ALU: ALU input A:         0
ALU: ALU input B:         X
ALU: ALU opcode: 9
ALU: ALU r:         x
REG File: 2 and 4 00000000, 00000000
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00100100000001000101010000110010, FUNCCODE: 110010
CTRL: Here is the RsDATA in andi =          0
CTRL: Here is the result =          x
REG File: 2 and 4 00000000, 00000000
PC: not reset or halt
PC: current value before increment: bfc00004
PC: normal increment
FSM: FETCH
CTRL: Here is the result =      21554
CTRL: Read instruction at RAM address: bfc00004
REG File: 2 and 4 00000000, xxxxxxxx
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 55558224
CTRL : instruction word: 24825555, opcode: 001001, funccode: 010101
IIIIIIIIII type
DECODE: Decoding is done, enterring parameter assginment
CTRL: INFO: ADDIU called
CTRL: INPUT INFO: Rs = 04 Rt = 02 Immediate = 5555 ALUCODE = 09 Rd = 04
REG File: 2 and 4 00000000, xxxxxxxx
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00100100100000100101010101010101, FUNCCODE: 010101
CTRL: Here is the RsDATA in andi =          0
CTRL: Here is the result =      21554
ALU: ALU input A:         0
ALU: ALU input B:     21845
ALU: ALU opcode: 9
ALU: ALU r:     21845
REG File: 2 and 4 00000000, xxxxxxxx
FSM: FETCH
PC: not reset or halt
PC: current value before increment: bfc00008
PC: normal increment
CTRL: Here is the result =      21845
CTRL: Read instruction at RAM address: bfc00008
REG File: 2 and 4 00005432, xxxxxxxx
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 08000000
CTRL : instruction word: 00000008, opcode: 000000, funccode: 001000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
REG File: 2 and 4 00005432, xxxxxxxx
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00000000000000000000000000001000, FUNCCODE: 001000
Arrived at jr: xxxxxxxx, Rs:  0
CTRL: Here is the result =      21845
REG File: 2 and 4 00005432, xxxxxxxx
PC: not reset or halt
PC: current value before increment: bfc0000c
PC: In jump_r
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: bfc0000c
REG File: 2 and 4 00005432, xxxxxxxx
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 4500a524
CTRL : instruction word: 24a50045, opcode: 001001, funccode: 000101
IIIIIIIIII type
DECODE: Decoding is done, enterring parameter assginment
REG File: 2 and 4 00005432, xxxxxxxx
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00100100101001010000000001000101, FUNCCODE: 000101
CTRL: Here is the RsDATA in andi =          0
CTRL: Here is the result =          0
ALU: ALU input A:         0
ALU: ALU input B:     21845
ALU: ALU opcode: 9
ALU: ALU r:     21845
REG File: 2 and 4 00005432, xxxxxxxx
FSM: FETCH
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
CTRL: Here is the result =      21845
CTRL: Read instruction at RAM address: xxxxxxxx
REG File: 2 and 4 00000000, xxxxxxxx
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
REG File: 2 and 4 00000000, xxxxxxxx
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =      21845
REG File: 2 and 4 00000000, xxxxxxxx
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
REG File: 2 and 4 00005555, xxxxxxxx
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
ALU: ALU input A:     21845
ALU: ALU input B:         0
ALU: ALU opcode: 0
ALU: ALU r:     21845
REG File: 2 and 4 00005555, xxxxxxxx
FSM: FETCH
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
CTRL: Here is the result =      21845
CTRL: Read instruction at RAM address: xxxxxxxx
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 4 00005555, xxxxxxxx
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =      21845
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
REG File: 2 and 4 00005555, xxxxxxxx
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
ALU: ALU input A:     21845
ALU: ALU input B:         0
ALU: ALU opcode: 0
ALU: ALU r:     21845
REG File: 2 and 4 00005555, xxxxxxxx
FSM: FETCH
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
CTRL: Here is the result =      21845
CTRL: Read instruction at RAM address: xxxxxxxx
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 4 00005555, xxxxxxxx
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =      21845
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
REG File: 2 and 4 00005555, xxxxxxxx
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
ALU: ALU input A:     21845
ALU: ALU input B:         0
ALU: ALU opcode: 0
ALU: ALU r:     21845
REG File: 2 and 4 00005555, xxxxxxxx
FSM: FETCH
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
CTRL: Here is the result =      21845
CTRL: Read instruction at RAM address: xxxxxxxx
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 4 00005555, xxxxxxxx
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =      21845
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
REG File: 2 and 4 00005555, xxxxxxxx
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
ALU: ALU input A:     21845
ALU: ALU input B:         0
ALU: ALU opcode: 0
ALU: ALU r:     21845
REG File: 2 and 4 00005555, xxxxxxxx
FSM: FETCH
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
CTRL: Here is the result =      21845
CTRL: Read instruction at RAM address: xxxxxxxx
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 4 00005555, xxxxxxxx
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =      21845
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
REG File: 2 and 4 00005555, xxxxxxxx
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
ALU: ALU input A:     21845
ALU: ALU input B:         0
ALU: ALU opcode: 0
ALU: ALU r:     21845
REG File: 2 and 4 00005555, xxxxxxxx
FSM: FETCH
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
CTRL: Here is the result =      21845
CTRL: Read instruction at RAM address: xxxxxxxx
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 4 00005555, xxxxxxxx
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =      21845
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
REG File: 2 and 4 00005555, xxxxxxxx
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
ALU: ALU input A:     21845
ALU: ALU input B:         0
ALU: ALU opcode: 0
ALU: ALU r:     21845
REG File: 2 and 4 00005555, xxxxxxxx
FSM: FETCH
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
CTRL: Here is the result =      21845
CTRL: Read instruction at RAM address: xxxxxxxx
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 4 00005555, xxxxxxxx
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =      21845
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
REG File: 2 and 4 00005555, xxxxxxxx
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
ALU: ALU input A:     21845
ALU: ALU input B:         0
ALU: ALU opcode: 0
ALU: ALU r:     21845
REG File: 2 and 4 00005555, xxxxxxxx
FSM: FETCH
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
CTRL: Here is the result =      21845
CTRL: Read instruction at RAM address: xxxxxxxx
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 4 00005555, xxxxxxxx
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =      21845
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
REG File: 2 and 4 00005555, xxxxxxxx
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
ALU: ALU input A:     21845
ALU: ALU input B:         0
ALU: ALU opcode: 0
ALU: ALU r:     21845
REG File: 2 and 4 00005555, xxxxxxxx
FSM: FETCH
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
CTRL: Here is the result =      21845
CTRL: Read instruction at RAM address: xxxxxxxx
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 4 00005555, xxxxxxxx
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =      21845
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
REG File: 2 and 4 00005555, xxxxxxxx
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
ALU: ALU input A:     21845
ALU: ALU input B:         0
ALU: ALU opcode: 0
ALU: ALU r:     21845
REG File: 2 and 4 00005555, xxxxxxxx
FSM: FETCH
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
CTRL: Here is the result =      21845
CTRL: Read instruction at RAM address: xxxxxxxx
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 4 00005555, xxxxxxxx
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =      21845
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
REG File: 2 and 4 00005555, xxxxxxxx
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
ALU: ALU input A:     21845
ALU: ALU input B:         0
ALU: ALU opcode: 0
ALU: ALU r:     21845
REG File: 2 and 4 00005555, xxxxxxxx
FSM: FETCH
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
CTRL: Here is the result =      21845
CTRL: Read instruction at RAM address: xxxxxxxx
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 4 00005555, xxxxxxxx
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =      21845
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
REG File: 2 and 4 00005555, xxxxxxxx
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
ALU: ALU input A:     21845
ALU: ALU input B:         0
ALU: ALU opcode: 0
ALU: ALU r:     21845
REG File: 2 and 4 00005555, xxxxxxxx
FSM: FETCH
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
CTRL: Here is the result =      21845
CTRL: Read instruction at RAM address: xxxxxxxx
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 4 00005555, xxxxxxxx
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =      21845
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
REG File: 2 and 4 00005555, xxxxxxxx
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
ALU: ALU input A:     21845
ALU: ALU input B:         0
ALU: ALU opcode: 0
ALU: ALU r:     21845
REG File: 2 and 4 00005555, xxxxxxxx
FSM: FETCH
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
CTRL: Here is the result =      21845
CTRL: Read instruction at RAM address: xxxxxxxx
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 4 00005555, xxxxxxxx
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =      21845
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
REG File: 2 and 4 00005555, xxxxxxxx
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
ALU: ALU input A:     21845
ALU: ALU input B:         0
ALU: ALU opcode: 0
ALU: ALU r:     21845
REG File: 2 and 4 00005555, xxxxxxxx
FSM: FETCH
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
CTRL: Here is the result =      21845
CTRL: Read instruction at RAM address: xxxxxxxx
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 4 00005555, xxxxxxxx
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =      21845
REG File: 2 and 4 00005555, xxxxxxxx
PC: not reset or halt
PC: current value before increment: xxxxxxxx
PC: normal increment
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
REG File: 2 and 4 00005555, xxxxxxxx
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
FATAL: test/0-MIPS_tb_RAM/mips_cpu_bus_tb.v:68: Simulation did not finish within         100 cycles.
       Time: 100000  Scope: mips_cpu_bus_tb
