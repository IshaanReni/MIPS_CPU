RAM : INIT : Loading RAM contents from ./test/2-bin/1-arithmetic_testing/xori_1.hex.txt
RAM : INIT : RAM contents at 00004e20 are: 24
RAM : INIT : RAM contents at 00004e21 are: 04
RAM : INIT : RAM contents at 00004e22 are: 0e
RAM : INIT : RAM contents at 00004e23 are: dd
RAM : INIT : RAM contents at 00004e24 are: 00
RAM : INIT : RAM contents at 00004e25 are: 00
RAM : INIT : RAM contents at 00004e26 are: 00
RAM : INIT : RAM contents at 00004e27 are: 00
RAM : INIT : RAM contents at 00004e28 are: 00
RAM : INIT : RAM contents at 00004e29 are: 00
RAM : INIT : RAM contents at 00004e2a are: 00
RAM : INIT : RAM contents at 00004e2b are: 08
RAM : INIT : RAM contents at 00004e2c are: 38
RAM : INIT : RAM contents at 00004e2d are: 82
RAM : INIT : RAM contents at 00004e2e are: ff
RAM : INIT : RAM contents at 00004e2f are: ff
RAM : INIT : RAM contents at 00004e30 are: 00
RAM : INIT : RAM contents at 00004e31 are: 00
RAM : INIT : RAM contents at 00004e32 are: 00
RAM : INIT : RAM contents at 00004e33 are: 00
RAM : INIT : RAM contents at 00004e34 are: 00
RAM : INIT : RAM contents at 00004e35 are: 00
RAM : INIT : RAM contents at 00004e36 are: 00
RAM : INIT : RAM contents at 00004e37 are: 00
RAM : INIT : RAM contents at 00004e38 are: 00
RAM : INIT : RAM contents at 00004e39 are: 00
RAM : INIT : RAM contents at 00004e3a are: 00
RAM : INIT : RAM contents at 00004e3b are: 00
RAM : INIT : RAM contents at 00004e3c are: 00
RAM : INIT : RAM contents at 00004e3d are: 00
REG File: 2 and 4 xxxxxxxx, xxxxxxxx
PC: not reset or halt
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: xxxxxxxx
REG File: 2 and 4 xxxxxxxx, xxxxxxxx
REG File: 2 and 4 00000000, 00000000
FSM: EXEC1
TB : Reset is now low.
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CPU : INFO   : Resetting.
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
ALU: ALU input A:         x
ALU: ALU input B:         x
ALU: ALU opcode: 0
ALU: ALU r:         x
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 4 00000000, 00000000
PC: not reset or halt
FSM: FETCH
CTRL: Here is the result =          x
CTRL: Read instruction at RAM address: bfc00000
REG File: 2 and 4 00000000, 00000000
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: dd0e0424
CTRL : instruction word: 24040edd, opcode: 001001, funccode: 011101
IIIIIIIIII type
DECODE: Decoding is done, enterring parameter assginment
CTRL: RAM INFO DATA READ: dd0e0424
CTRL : instruction word: 24040edd, opcode: 001001, funccode: 011101
IIIIIIIIII type
DECODE: Decoding is done, enterring parameter assginment
CTRL: INFO: ADDIU called
CTRL: INPUT INFO: Rs = 00 Rt = 04 Immediate = 0edd ALUCODE = 09 Rd = 00
REG File: 2 and 4 00000000, 00000000
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00100100000001000000111011011101, FUNCCODE: 011101
CTRL: Here is the RsDATA in andi =          0
CTRL: Here is the result =          x
ALU: ALU input A:         0
ALU: ALU input B:      3805
ALU: ALU opcode: 9
ALU: ALU r:      3805
CTRL: Instruction again: 00100100000001000000111011011101, FUNCCODE: 011101
CTRL: Here is the RsDATA in andi =          0
CTRL: Here is the result =       3805
REG File: 2 and 4 00000000, 00000000
FSM: FETCH
PC: not reset or halt
PC: current value before increment: bfc00000
CTRL: Here is the result =       3805
CTRL: Read instruction at RAM address: bfc00000
CTRL: Here is the result =       3805
CTRL: Read instruction at RAM address: bfc00004
REG File: 2 and 4 00000000, 00000edd
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 4 00000000, 00000edd
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
ALU: ALU input A:      3805
ALU: ALU input B:         0
ALU: ALU opcode: 0
ALU: ALU r:      3805
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =       3805
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =       3805
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
REG File: 2 and 4 00000000, 00000edd
PC: not reset or halt
PC: current value before increment: bfc00004
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: bfc00004
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: bfc00008
REG File: 2 and 4 00000000, 00000edd
FSM: EXEC1
PC: not reset or halt
CTRL: RAM INFO DATA READ: 08000000
CTRL : instruction word: 00000008, opcode: 000000, funccode: 001000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
Detect JR in EXEC 1, Rs:  0
CTRL: RAM INFO DATA READ: 08000000
CTRL : instruction word: 00000008, opcode: 000000, funccode: 001000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
Detect JR in EXEC 1, Rs:  0
REG File: 2 and 4 00000000, 00000edd
PC: not reset or halt
FSM: EXEC2
CTRL: Instruction again: 00000000000000000000000000001000, FUNCCODE: 001000
Arrived at jr: 00000000, Rs:  0
CTRL: Here is the result =          0
REG File: 2 and 4 00000000, 00000edd
FSM: FETCH
PC: not reset or halt
PC: current value before increment: bfc00008
PC: In jump_r
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: bfc00008
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: bfc0000c
REG File: 2 and 4 00000000, 00000edd
PC: not reset or halt
FSM: EXEC1
CTRL: RAM INFO DATA READ: ffff8238
CTRL : instruction word: 3882ffff, opcode: 001110, funccode: 111111
IIIIIIIIII type
DECODE: Decoding is done, enterring parameter assginment
CTRL: RAM INFO DATA READ: ffff8238
CTRL : instruction word: 3882ffff, opcode: 001110, funccode: 111111
IIIIIIIIII type
DECODE: Decoding is done, enterring parameter assginment
CTRL: INFO: ADDIU called
CTRL: INPUT INFO: Rs = 04 Rt = 02 Immediate = ffff ALUCODE = 0e Rd = 04
REG File: 2 and 4 00000000, 00000edd
FSM: EXEC2
PC: not reset or halt
CTRL: Instruction again: 00111000100000101111111111111111, FUNCCODE: 111111
CTRL: Here is the RsDATA in andi =          0
CTRL: Here is the result =          0
ALU: ALU input A:         0
ALU: ALU input B:     65535
ALU: ALU opcode:14
ALU: ALU r:     65535
CTRL: Instruction again: 00111000100000101111111111111111, FUNCCODE: 111111
CTRL: Here is the RsDATA in andi =          0
CTRL: Here is the result =      65535
CTRL: Instruction again: 00111000100000101111111111111111, FUNCCODE: 111111
CTRL: Here is the RsDATA in andi =       3805
CTRL: Here is the result =      65535
CTRL: Instruction again: 00111000100000101111111111111111, FUNCCODE: 111111
CTRL: Here is the RsDATA in andi =       3805
CTRL: Here is the result =      61730
REG File: 2 and 4 00000000, 00000edd
PC: not reset or halt
PC: current value before increment: bfc0000c
PC: In r_delay: 00000000
FSM: FETCH
CTRL: Here is the result =      61730
CTRL: Read instruction at RAM address: bfc0000c
CTRL: Here is the result =      61730
CTRL: Read instruction at RAM address: 00000000
REG File: 2 and 4 0000f122, 00000edd
FSM: EXEC1
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
ALU: ALU input A:      3805
ALU: ALU input B:     65535
ALU: ALU opcode: 0
ALU: ALU r:      3805
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
CTRL: RAM INFO DATA READ: 00000000
CTRL : instruction word: 00000000, opcode: 000000, funccode: 000000
RRRRRRRRRR type
DECODE: Decoding is done, enterring parameter assginment
CTRL: SLL SHAMT 00, Instruction:00000000, FUNCCODE:000000
HHHHHHHHH ALU CODE 00
REG File: 2 and 4 0000f122, 00000edd
FSM: EXEC2
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =       3805
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =      61730
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =      61730
CTRL: Instruction again: 00000000000000000000000000000000, FUNCCODE: 000000
CTRL: INFO: Currently in the SLL statement
CTRL: Here is the result =          0
REG File: 2 and 4 0000f122, 00000edd
FSM: FETCH
CTRL: Here is the result =          0
CTRL: Read instruction at RAM address: 00000000
REG File: 2 and 4 0000f122, 00000edd
FSM: HALT
REG File: 2 and 4 0000f122, 00000edd
FSM: HALT
TB : finished; running=0
TB : INFO : register_v0=0000f122
test/0-MIPS_tb_RAM/mips_cpu_bus_tb.v:97: $finish called at 19500 (10ps)
CPU : OUT   :      61730
